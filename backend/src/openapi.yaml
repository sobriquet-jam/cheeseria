openapi: 3.0.0
info:
  version: 1.0.0
  title: Cheeseria
paths:
  /cheeses:
    get:
      summary: Get all cheeses
      operationId: GetAllCheeses
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cheese"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"
    post:
      summary: Create a new cheese
      operationId: CreateCheese
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cheese"
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cheese"
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/ServerError"
  /cheeses/{id}:
    get:
      summary: Get a specific cheese by ID
      operationId: GetCheeseById
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cheese"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"
    put:
      summary: Update a specific cheese by ID
      operationId: UpdateCheeseById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cheese"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cheese"
        404:
          $ref: "#/components/responses/NotFound"
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/ServerError"
    delete:
      summary: Delete a specific cheese by ID
      operationId: DeleteCheeseById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid

      responses:
        204:
          description: Cheese was deleted
          content:
            application/json:
              schema:
                required: [message]
                properties:
                  message:
                    type: string
                    description: Brief description of the task
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

components:
  schemas:
    Cheese:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 2
          maxLength: 100
        description:
          type: string
          minLength: 1
          maxLength: 255
        pricePerKilo:
          type: number
          minimum: 0.1
        images:
          type: array
          minItems: 1
          items:
            type: string
        createdAt:
          type: string
          format: date-time
  responses:
    # 404
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            required: [message]
            properties:
              message:
                type: string
                description: Brief description of the problem
    # 400
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            required: [message]
            properties:
              message:
                type: string
                description: Brief description of the problem
    #500
    ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            required: [message]
            properties:
              message:
                type: string
                description: Brief description of the problem
